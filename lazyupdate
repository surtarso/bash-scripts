#!/bin/bash

## Lazy Updater by Tarso Galvao 11/2021

## depends on "neofetch" package for OS banner
## depends on "byobu" package for removing old kernels

HOME=~
LOGFILE="${HOME}/.lazy_log"

#remove old logfile (if exists) and create new one
if [ -f $LOGFILE ]; then rm -f $LOGFILE; fi
touch $LOGFILE

#check if required packages are installed
if [ $(dpkg -l | grep -ci -m1 'neofetch') -eq 0 ] || [ $(dpkg -l | grep -ci -m1 'byobu') -eq 0 ]; then
echo -e "\033[0;36mInstalling required packages...\033[0;37m" 2>&1 | tee $LOGFILE
fi
#install them silently
{
if [ $(dpkg -l | grep -ci -m1 'neofetch') -eq 0 ]; then
       	sudo apt-get install neofetch -y
fi

if [ $(dpkg -l | grep -ci -m1 'byobu') -eq 0 ]; then
       	sudo apt-get install byobu -y
fi
} >> $LOGFILE

#begin printing to screen
echo ""
neofetch 2>&1 | tee -a $LOGFILE

echo -e "	\033[1;33m++\033[1;31m UPDATING SOURCES\033[1;33m ++ \033[0;36m"
echo -e "\033[0;36mAPT UPDATE: $(date)\033[0;37m" >> $LOGFILE
sudo apt-get update >> $LOGFILE
echo "        done."

echo -e "	\033[1;33m++\033[1;31m UPGRADING PACKAGES\033[1;33m ++ \033[0;32m"
echo -e "\033[0;36mAPT UPGRADE: $(date)\033[0;37m" >> $LOGFILE
sudo apt-get upgrade -y >> $LOGFILE
echo "        done."

echo -e "	\033[1;33m++\033[1;31m UPGRADING DISTRIBUTION\033[1;33m ++ \033[0;35m"
echo -e "\033[0;36mAPT DIST-UPGRADE: $(date)\033[0;37m" >> $LOGFILE
sudo apt-get dist-upgrade -y >> $LOGFILE
echo "        done."

echo -e "	\033[1;33m++\033[1;31m REMOVING UNNEEDED FILES\033[1;33m ++ \033[0;33m"
echo -e "\033[0;36mAPT AUTOREMOVE: $(date)\033[0;37m" >> $LOGFILE
sudo apt-get autoremove -y >> $LOGFILE
echo "        done."

echo -e "	\033[1;33m++\033[1;31m CLEANING PACKAGES\033[1;33m ++ \033[0;31m"
echo -e "\033[0;36mAPT AUTOCLEAN: $(date)\033[0;37m" >> $LOGFILE
sudo apt-get autoclean >> $LOGFILE
echo "        done."

echo -e "        \033[1;33m++\033[1;31m REMOVING OLD KERNELS\033[1;33m ++ \033[1;34m"
echo -e "\033[0;36mPURGE-OLD-KERNELS: $(date)\033[0;37m" >> $LOGFILE
sudo purge-old-kernels >> $LOGFILE
echo "        done."

## echo -e "	\033[1;33m++\033[1;31m UPDATING FLATPAKS\033[1;33m ++ \033[0;37m"
## echo -e "\033[0;36mFLATPAK UPDATE: $(date)\033[0;37m" >> $LOGFILE
## flatpak update -y >> $LOGFILE
## echo "        done."

echo ""
echo -e "\033[0;37m(logged in $(dir $LOGFILE))"
